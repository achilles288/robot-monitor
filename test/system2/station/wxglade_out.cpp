// -*- C++ -*-
//
// generated by wxGlade 0.9.4 on Mon Jun 14 18:24:45 2021
//
// Example for compiling a single file project under Linux using g++:
//  g++ MyApp.cpp $(wx-config --libs) $(wx-config --cxxflags) -o MyApp
//
// Example for compiling a multi file project under Linux using g++:
//  g++ main.cpp $(wx-config --libs) $(wx-config --cxxflags) -o MyApp Dialog1.cpp Frame1.cpp
//

#include "wxglade_out.h"

// begin wxGlade: ::extracode
// end wxGlade



MyFrame::MyFrame(wxWindow* parent, wxWindowID id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
    wxFrame(parent, id, title, pos, size, wxDEFAULT_FRAME_STYLE)
{
    // begin wxGlade: MyFrame::MyFrame
    SetSize(wxSize(401, 331));
    construct_user();
    frame_menubar = new wxMenuBar();
    wxMenu *wxglade_tmp_menu;
    wxMenuItem *wxglade_tmp_item;
    wxglade_tmp_menu = new wxMenu();
    wxglade_tmp_item = wxglade_tmp_menu->Append(wxID_ANY, wxT("Exit"), wxEmptyString);
    Bind(wxEVT_MENU, &MyFrame::onMenuExit, this, wxglade_tmp_item->GetId());
    frame_menubar->Append(wxglade_tmp_menu, wxT("File"));
    wxglade_tmp_menu = new wxMenu();
    /*wxMenu* menuPort = new wxMenu();
    wxglade_tmp_item = menuPort->Append(wxID_ANY, wxT("/dev/ttyACM0"), wxEmptyString, wxITEM_RADIO);
    Bind(wxEVT_MENU, &MyFrame::onMenuPort, this, wxglade_tmp_item->GetId());*/
    wxglade_tmp_menu->Append(ID_MENU_PORT, wxT("Port"), menuPort, wxEmptyString);
    wxMenu* menuBaudrate = new wxMenu();
    menuBaudrate->Append(ID_B9600, wxT("9600"), wxEmptyString, wxITEM_RADIO);
    Bind(wxEVT_MENU, &MyFrame::onMenuBaudrate, this, ID_B9600);
    menuBaudrate->Append(ID_B19200, wxT("19200"), wxEmptyString, wxITEM_RADIO);
    Bind(wxEVT_MENU, &MyFrame::onMenuBaudrate, this, ID_B19200);
    menuBaudrate->Append(ID_B38400, wxT("38400"), wxEmptyString, wxITEM_RADIO);
    Bind(wxEVT_MENU, &MyFrame::onMenuBaudrate, this, ID_B38400);
    menuBaudrate->Append(ID_B57600, wxT("57600"), wxEmptyString, wxITEM_RADIO);
    Bind(wxEVT_MENU, &MyFrame::onMenuBaudrate, this, ID_B57600);
    menuBaudrate->Append(ID_B74880, wxT("74880"), wxEmptyString, wxITEM_RADIO);
    Bind(wxEVT_MENU, &MyFrame::onMenuBaudrate, this, ID_B74880);
    menuBaudrate->Append(ID_B115200, wxT("115200"), wxEmptyString, wxITEM_RADIO);
    Bind(wxEVT_MENU, &MyFrame::onMenuBaudrate, this, ID_B115200);
    wxglade_tmp_menu->Append(ID_MENU_BAUDRATE, wxT("Baudrate"), menuBaudrate, wxEmptyString);
    wxglade_tmp_menu->Append(ID_MENU_CONNECT, wxT("Connect"), wxEmptyString);
    Bind(wxEVT_MENU, &MyFrame::onMenuConnect, this, ID_MENU_CONNECT);
    wxglade_tmp_menu->Append(ID_MENU_DISCONNECT, wxT("Disconnect"), wxEmptyString);
    Bind(wxEVT_MENU, &MyFrame::onMenuDisconnect, this, ID_MENU_DISCONNECT);
    frame_menubar->Append(wxglade_tmp_menu, wxT("Tools"));
    wxglade_tmp_menu = new wxMenu();
    wxglade_tmp_item = wxglade_tmp_menu->Append(wxID_ANY, wxT("About"), wxEmptyString);
    Bind(wxEVT_MENU, &MyFrame::onMenuAbout, this, wxglade_tmp_item->GetId());
    frame_menubar->Append(wxglade_tmp_menu, wxT("Help"));
    SetMenuBar(frame_menubar);
    /*lblAccX = new wxStaticText(this, wxID_ANY, wxT("AccX"));
    lblAccY = new wxStaticText(this, wxID_ANY, wxT("AccY"));
    lblAccZ = new wxStaticText(this, wxID_ANY, wxT("AccZ"));
    lblGyroX = new wxStaticText(this, wxID_ANY, wxT("GyroX"));
    lblGyroY = new wxStaticText(this, wxID_ANY, wxT("GyroY"));
    lblGyroZ = new wxStaticText(this, wxID_ANY, wxT("GyroZ"));
    lblMagX = new wxStaticText(this, wxID_ANY, wxT("MagX"));
    lblMagY = new wxStaticText(this, wxID_ANY, wxT("MagY"));
    lblMagZ = new wxStaticText(this, wxID_ANY, wxT("MagZ"));
    btnCaliGryo = new wxButton(this, wxID_ANY, wxT("Calibrate 1"));
    btnCaliMag = new wxButton(this, wxID_ANY, wxT("Calibrate 2"));
    txtEcho = new wxTextCtrl(this, wxID_ANY, wxEmptyString, wxDefaultPosition, wxDefaultSize, wxTE_MULTILINE);
    lblPortStatus = new wxStaticText(this, wxID_ANY, wxT("Not connected"), wxDefaultPosition, wxDefaultSize, wxALIGN_RIGHT);
    lblPortAddress = new wxStaticText(this, wxID_ANY, wxT("n/a"));*/
    
    wxglade_tmp_menu = menuPort->GetParent();
    wxglade_tmp_menu->Enable(ID_MENU_PORT, false);
    wxglade_tmp_menu->Enable(ID_MENU_CONNECT, false);
    wxglade_tmp_menu->Enable(ID_MENU_DISCONNECT, false);
    
    set_properties();
    do_layout();
    // end wxGlade
}


void MyFrame::set_properties()
{
    // begin wxGlade: MyFrame::set_properties
    SetTitle(wxT("frame"));
    wxIcon _icon;
    _icon.CopyFromBitmap(rmGetIcon());
    SetIcon(_icon);
    // end wxGlade
}


void MyFrame::do_layout()
{
    // begin wxGlade: MyFrame::do_layout
    wxBoxSizer* sizer_1 = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_8 = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_7 = new wxStaticBoxSizer(new wxStaticBox(this, wxID_ANY, wxT("Messages")), wxHORIZONTAL);
    wxBoxSizer* sizer_2 = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_4 = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_10 = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_9 = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_3 = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_6 = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_5 = new wxBoxSizer(wxVERTICAL);
    sizer_5->Add(lblAccX, 0, 0, 0);
    sizer_5->Add(lblAccY, 0, 0, 0);
    sizer_5->Add(lblAccZ, 0, wxALL, 0);
    sizer_3->Add(sizer_5, 1, wxEXPAND, 0);
    sizer_6->Add(lblGyroX, 0, 0, 0);
    sizer_6->Add(lblGyroY, 0, 0, 0);
    sizer_6->Add(lblGyroZ, 0, 0, 0);
    sizer_3->Add(sizer_6, 1, wxEXPAND, 0);
    sizer_2->Add(sizer_3, 1, wxALL|wxEXPAND, 5);
    sizer_9->Add(lblMagX, 0, 0, 0);
    sizer_9->Add(lblMagY, 0, 0, 0);
    sizer_9->Add(lblMagZ, 0, 0, 0);
    sizer_4->Add(sizer_9, 1, wxEXPAND, 0);
    sizer_10->Add(btnCaliGryo, 0, 0, 0);
    sizer_10->Add(btnCaliMag, 0, 0, 0);
    sizer_4->Add(sizer_10, 1, wxEXPAND, 0);
    sizer_2->Add(sizer_4, 1, wxALL|wxEXPAND, 5);
    sizer_1->Add(sizer_2, 1, wxEXPAND, 0);
    sizer_7->Add(txtEcho, 1, wxEXPAND, 0);
    sizer_1->Add(sizer_7, 1, wxEXPAND|wxTOP, 5);
    sizer_8->Add(lblPortStatus, 0, 0, 0);
    sizer_8->Add(20, 16, 1, 0, 0);
    sizer_8->Add(lblPortAddress, 0, 0, 0);
    sizer_1->Add(sizer_8, 0, wxEXPAND|wxTOP, 5);
    SetSizer(sizer_1);
    Layout();
    // end wxGlade
}


BEGIN_EVENT_TABLE(MyFrame, wxFrame)
    // begin wxGlade: MyFrame::event_table
    // end wxGlade
END_EVENT_TABLE();


// wxGlade: add MyFrame event handlers


class MyApp: public wxApp {
public:
    bool OnInit();
};

IMPLEMENT_APP(MyApp)

bool MyApp::OnInit()
{
    wxInitAllImageHandlers();
    MyFrame* frame = new MyFrame(NULL, wxID_ANY, wxEmptyString);
    SetTopWindow(frame);
    frame->Show();
    return true;
}
